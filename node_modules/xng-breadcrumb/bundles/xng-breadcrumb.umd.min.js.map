{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://xng-breadcrumb/lib/breadcrumb-item.directive.ts","ng://xng-breadcrumb/lib/breadcrumb.service.ts","ng://xng-breadcrumb/lib/breadcrumb.component.ts","ng://xng-breadcrumb/lib/breadcrumb.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","BreadcrumbItemDirective","Directive","selector","BreadcrumbService","activatedRoute","router","baseHref","dynamicBreadcrumbStore","currentBreadcrumbs","previousBreadcrumbs","breadcrumbs","BehaviorSubject","breadcrumbs$","asObservable","pathParamPrefix","pathParamRegexIdentifier","pathParamRegexReplacer","setBaseBreadcrumb","detectRouteChanges","set","pathOrAlias","breadcrumb","validateArguments","label","startsWith","updateStore","alias","slice","breadcrumbExtraProps","buildRouteRegExp","baseConfig","config","find","pathConfig","path","data","_a","getBreadcrumbOptions","_b","skip","info","_c","disable","isAutoGeneratedLabel","baseBreadcrumb","routeLink","_this","events","pipe","filter","event","NavigationEnd","distinctUntilChanged","subscribe","prepareBreadcrumbList","root","routeLinkPrefix","routeConfig","breadcrumbItem","prepareBreadcrumbItem","firstChild","lastCrumb","resolveQueryParamForLastItem","breadcrumbsToShow","item","parseRouteData","resolvedPath","resolvePathParam","getFromStore","resolveQueryParam","mergeWithBaseChildData","breadcrumbAlias","matchingItem","routeRegex","RegExp","test","includes","replace","getBreadcrumbIndexes","breadcrumbItemIndex","storeItemIndex","concat","__spread","indexMap","getBreadcrumbIndexesByType","findIndex","entries","snapshot","params","forEach","previousBreadcrumb","queryParams","fragment","lastItem","keys","undefined","loadChildren","baseChild","_loadedConfig","routes","route","children","console","ActivatedRoute","Router","Injectable","providedIn","BreadcrumbComponent","breadcrumbService","_separator","autoGenerate","preserveQueryParams","class","TemplateRef","separatorTemplate","ngOnInit","subscription","map","split","ngOnDestroy","unsubscribe","ContentChild","static","read","Input","Component","template","encapsulation","ViewEncapsulation","None","BreadcrumbModule","NgModule","declarations","imports","CommonModule","RouterModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive } from '@angular/core';\n\n/**\n * This directive is used to customize the breadcrumb label behavior\n * *xngBreadcrumbItem directive can be used in the child element of xng-breadcrumb\n * Usage: refer to demo app.component.html\n */\n@Directive({\n  selector: '[xngBreadcrumbItem]'\n})\nexport class BreadcrumbItemDirective {\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { Breadcrumb } from './breadcrumb';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService {\n  /**\n   * breadcrumb label for base OR root path. Usually, this can be set as 'Home'\n   */\n  private baseBreadcrumb: Breadcrumb;\n\n  private baseHref = '/';\n\n  /**\n   * dynamicBreadcrumbStore holds information about dynamically updated breadcrumbs.\n   * Breadcrumbs can be set from anywhere (component, service) in the app.\n   * On every breadcrumb update check this store and use the info if available.\n   */\n  private dynamicBreadcrumbStore: Breadcrumb[] = [];\n\n  /**\n   * breadcrumbList for the current route\n   * When breadcrumb info is changed dynamically, check if the currentBreadcrumbs is effected\n   * If effected, update the change and emit a new stream\n   */\n  private currentBreadcrumbs: Breadcrumb[] = [];\n  private previousBreadcrumbs: Breadcrumb[] = [];\n\n  /**\n   * Breadcrumbs observable to be subscribed by BreadcrumbComponent\n   * Emits on every route change OR dynamic update of breadcrumb\n   */\n  private breadcrumbs = new BehaviorSubject<Breadcrumb[]>([]);\n  public breadcrumbs$ = this.breadcrumbs.asObservable();\n\n  private pathParamPrefix = ':';\n  private pathParamRegexIdentifier = '/:[^/]+';\n  private pathParamRegexReplacer = '/[^/]+';\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\n    this.setBaseBreadcrumb();\n    this.detectRouteChanges();\n  }\n\n  /**\n   * Update breadcrumb label or options for -\n   *\n   * route (complete route path). route can be passed the same way you define angular routes\n   * 1) update label Ex: set('/mentor', 'Mentor'), set('/mentor/:id', 'Mentor Details')\n   * 2) change visibility Ex: set('/mentor/:id/edit', { skip: true })\n   * 3) add info Ex: set('/mentor/:id/edit', { info: { icon: 'edit', iconColor: 'blue' } })\n   * ------------------------ OR -------------------------\n   *\n   * alias (prefixed with '@'). breadcrumb alias is unique for a route\n   * 1) update label Ex: set('@mentor', 'Enabler')\n   * 2) change visibility Ex: set('@mentorEdit', { skip: true })\n   * 3) add info Ex: set('@mentorEdit', { info: { icon: 'edit', iconColor: 'blue' } })\n   */\n  set(pathOrAlias: string, breadcrumb: string | Breadcrumb) {\n    if (!this.validateArguments(pathOrAlias, breadcrumb)) {\n      return;\n    }\n\n    if (typeof breadcrumb === 'string') {\n      breadcrumb = {\n        label: breadcrumb\n      };\n    }\n\n    if (pathOrAlias.startsWith('@')) {\n      this.updateStore({ ...breadcrumb, alias: pathOrAlias.slice(1) });\n    } else {\n      const breadcrumbExtraProps = this.buildRouteRegExp(pathOrAlias);\n      this.updateStore({ ...breadcrumb, ...breadcrumbExtraProps });\n    }\n  }\n\n  private setBaseBreadcrumb() {\n    const baseConfig = this.router.config.find(pathConfig => pathConfig.path === '');\n    if (baseConfig && baseConfig.data) {\n      // tslint:disable-next-line: prefer-const\n      let { label, alias, skip = false, info, disable = false } = this.getBreadcrumbOptions(baseConfig.data);\n\n      let isAutoGeneratedLabel = false;\n      if (typeof label !== 'string' && !label) {\n        label = '';\n        isAutoGeneratedLabel = true;\n      }\n\n      this.baseBreadcrumb = {\n        label,\n        alias,\n        skip,\n        disable,\n        info,\n        routeLink: this.baseHref,\n        isAutoGeneratedLabel\n      };\n    }\n  }\n\n  /**\n   * Whenever route changes build breadcrumb list again\n   */\n  private detectRouteChanges() {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        distinctUntilChanged()\n      )\n      .subscribe(event => {\n        this.previousBreadcrumbs = this.currentBreadcrumbs;\n\n        this.currentBreadcrumbs = this.baseBreadcrumb ? [this.baseBreadcrumb] : [];\n        this.prepareBreadcrumbList(this.activatedRoute.root, this.baseHref);\n      });\n  }\n\n  private prepareBreadcrumbList(activatedRoute: ActivatedRoute, routeLinkPrefix: string): Breadcrumb[] {\n    if (activatedRoute.routeConfig && activatedRoute.routeConfig.path) {\n      const breadcrumbItem = this.prepareBreadcrumbItem(activatedRoute, routeLinkPrefix);\n      this.currentBreadcrumbs.push(breadcrumbItem);\n\n      if (activatedRoute.firstChild) {\n        return this.prepareBreadcrumbList(activatedRoute.firstChild, breadcrumbItem.routeLink + '/');\n      }\n    } else if (activatedRoute.firstChild) {\n      return this.prepareBreadcrumbList(activatedRoute.firstChild, routeLinkPrefix);\n    }\n    const lastCrumb = this.currentBreadcrumbs[this.currentBreadcrumbs.length - 1];\n    this.resolveQueryParamForLastItem(lastCrumb, activatedRoute);\n\n    // remove breadcrumb items that needs to be hidden or don't have a label\n    const breadcrumbsToShow = this.currentBreadcrumbs.filter(item => !item.skip);\n\n    this.breadcrumbs.next(breadcrumbsToShow);\n  }\n\n  private prepareBreadcrumbItem(activatedRoute: ActivatedRoute, routeLinkPrefix: string): Breadcrumb {\n    const { path, breadcrumb } = this.parseRouteData(activatedRoute.routeConfig);\n\n    // in case of path param get the resolved for param\n    const resolvedPath = this.resolvePathParam(path, activatedRoute);\n    const routeLink = `${routeLinkPrefix}${resolvedPath}`;\n\n    // tslint:disable-next-line: prefer-const\n    let { label, alias, skip, disable, info } = this.getFromStore(breadcrumb.alias, routeLink);\n    let isAutoGeneratedLabel = false;\n\n    if (typeof label !== 'string') {\n      if (typeof breadcrumb.label === 'string') {\n        label = breadcrumb.label;\n      } else {\n        label = resolvedPath;\n        isAutoGeneratedLabel = true;\n      }\n    }\n\n    return {\n      label,\n      alias: alias || breadcrumb.alias,\n      skip: skip || breadcrumb.skip,\n      disable: disable || breadcrumb.disable,\n      info: info || breadcrumb.info,\n      routeLink,\n      isAutoGeneratedLabel,\n      ...this.resolveQueryParam(routeLink)\n    };\n  }\n\n  /**\n   * For a specific route, breadcrumb can be defined either on parent data OR it's child(which has empty path) data\n   * When both are defined, child takes precedence\n   *\n   * Ex: Below we are setting breadcrumb on both parent and child.\n   * So, child takes precedence and \"Defined On Child\" is displayed for the route 'home'\n   * { path: 'home', loadChildren: './home/home.module#HomeModule' , data: {breadcrumb: \"Defined On Module\"}}\n   *                                                AND\n   * children: [\n   *   { path: '', component: ShowUserComponent, data: {breadcrumb: \"Defined On Child\" }\n   * ]\n   */\n  private parseRouteData(routeConfig) {\n    const { path, data = {} } = routeConfig;\n    const breadcrumb = this.mergeWithBaseChildData(routeConfig, { ...data });\n\n    return { path, breadcrumb };\n  }\n\n  private getFromStore(breadcrumbAlias: string, routeLink: string): Breadcrumb {\n    let matchingItem;\n    if (breadcrumbAlias) {\n      matchingItem = this.dynamicBreadcrumbStore.find(item => item.alias === breadcrumbAlias);\n    }\n\n    if (!matchingItem && routeLink) {\n      matchingItem = this.dynamicBreadcrumbStore.find(item => {\n        return (item.routeLink && item.routeLink === routeLink) || (item.routeRegex && new RegExp(item.routeRegex).test(routeLink + '/'));\n      });\n    }\n\n    return matchingItem || {};\n  }\n\n  /**\n   * To update breadcrumb label for a route with path param, we need regex that matches route.\n   * Instead of user providing regex, we help in preparing regex dynamically\n   *\n   * Ex: route declaration - path: '/mentor/:id'\n   * breadcrumbService.set('/mentor/:id', 'Uday');\n   * '/mentor/2' OR 'mentor/ada' we should use 'Uday' as label\n   *\n   * regex string is built, if route has path params(contains with ':')\n   */\n  private buildRouteRegExp(path) {\n    // ensure leading slash is provided in the path\n    if (!path.startsWith('/')) {\n      path = '/' + path;\n    }\n\n    if (path.includes(this.pathParamPrefix)) {\n      // replace mathing path param with a regex\n      // '/mentor/:id' becomes '/mentor/[^/]', which further will be matched in updateStore\n      const routeRegex = path.replace(new RegExp(this.pathParamRegexIdentifier, 'g'), this.pathParamRegexReplacer);\n      return { routeRegex };\n    } else {\n      return { routeLink: path };\n    }\n  }\n\n  /**\n   * Update current breadcrumb definition and emit a new stream of breadcrumbs\n   * Also update the store to reuse dynamic declarations\n   */\n  private updateStore(breadcrumb) {\n    const { breadcrumbItemIndex, storeItemIndex } = this.getBreadcrumbIndexes(breadcrumb);\n\n    // if breadcrumb is present in current breadcrumbs update it and emit new stream\n    if (breadcrumbItemIndex > -1) {\n      this.currentBreadcrumbs[breadcrumbItemIndex] = { ...this.currentBreadcrumbs[breadcrumbItemIndex], ...breadcrumb };\n      const breadcrumbsToShow = this.currentBreadcrumbs.filter(item => !item.skip);\n      this.breadcrumbs.next([...breadcrumbsToShow]);\n    }\n\n    // If the store already has this route definition update it, else add\n    if (storeItemIndex > -1) {\n      this.dynamicBreadcrumbStore[storeItemIndex] = { ...this.dynamicBreadcrumbStore[storeItemIndex], ...breadcrumb };\n    } else {\n      this.dynamicBreadcrumbStore.push(breadcrumb);\n    }\n  }\n\n  private getBreadcrumbIndexes(breadcrumb): any {\n    const { alias, routeLink, routeRegex } = breadcrumb;\n    let indexMap = {};\n    // identify macthing breadcrumb and store item\n    if (alias) {\n      indexMap = this.getBreadcrumbIndexesByType('alias', alias);\n    } else if (routeLink) {\n      indexMap = this.getBreadcrumbIndexesByType('routeLink', routeLink);\n    } else if (routeRegex) {\n      indexMap = this.getBreadcrumbIndexesByType('routeRegex', routeRegex);\n    }\n    return indexMap;\n  }\n\n  private getBreadcrumbIndexesByType(key: string, value: string) {\n    let breadcrumbItemIndex: number;\n    if (key !== 'routeRegex') {\n      breadcrumbItemIndex = this.currentBreadcrumbs.findIndex(item => value === item[key]);\n    } else {\n      breadcrumbItemIndex = this.currentBreadcrumbs.findIndex(item => new RegExp(value).test(item.routeLink));\n    }\n    const storeItemIndex = this.dynamicBreadcrumbStore.findIndex(item => value === item[key]);\n\n    return { breadcrumbItemIndex, storeItemIndex };\n  }\n\n  private resolvePathParam(path: string, activatedRoute: ActivatedRoute) {\n    // if the path segment is a route param, read the param value from url\n    if (path.includes(this.pathParamPrefix)) {\n      Object.entries(activatedRoute.snapshot.params).forEach(([key, value]) => {\n        path = path.replace(`:${key}`, `${value}`);\n      })\n    }\n    return path;\n  }\n\n  private resolveQueryParam(routeLink: string): Breadcrumb {\n    const previousBreadcrumb = this.previousBreadcrumbs.find(item => item.routeLink === routeLink) || {};\n    return {\n      queryParams: previousBreadcrumb.queryParams,\n      fragment: previousBreadcrumb.fragment\n    };\n  }\n\n  private resolveQueryParamForLastItem(lastItem: Breadcrumb, activatedRoute: ActivatedRoute) {\n    const { queryParams, fragment } = activatedRoute.snapshot;\n    // For last item in the crumbs set queryParams from activatedRoute\n    if(lastItem){\n      lastItem.queryParams = Object.keys(queryParams).length > 0 ? { ...queryParams } : undefined;\n      lastItem.fragment = fragment\n    }\n  }\n\n  /**\n   * get empty children of a module or Component. Empty child is the one with path: ''\n   * When parent and it's children (that has empty route path) define data\n   * merge them both with child taking precedence\n   */\n  private mergeWithBaseChildData(routeConfig, data): Breadcrumb {\n    if (!routeConfig) {\n      return this.getBreadcrumbOptions(data);\n    }\n\n    let baseChild;\n    if (routeConfig.loadChildren) {\n      // To handle a module with empty child route\n      baseChild = routeConfig._loadedConfig.routes.find(route => route.path === '');\n    } else if (routeConfig.children) {\n      // To handle a component with empty child route\n      baseChild = routeConfig.children.find(route => route.path === '');\n    }\n\n    return baseChild && baseChild.data\n      ? this.mergeWithBaseChildData(baseChild, {\n        ...this.getBreadcrumbOptions(data),\n        ...this.getBreadcrumbOptions(baseChild.data)\n      })\n      : this.getBreadcrumbOptions(data);\n  }\n\n  private validateArguments(pathOrAlias, breadcrumb) {\n    if (pathOrAlias === null || pathOrAlias === undefined) {\n      console.error('Invalid first argument. Please pass a route path or a breadcrumb alias.');\n      return false;\n    } else if (breadcrumb === null || breadcrumb === undefined) {\n      console.error('Invalid second argument. Please pass a string or an Object with breadcrumb options.');\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * breadcrumb can be passed a label or an options object\n   * If passed as a string convert to breadcrumb options object\n   */\n  private getBreadcrumbOptions(data) {\n    let { breadcrumb } = data;\n    if (typeof breadcrumb === 'string' || !breadcrumb) {\n      breadcrumb = {\n        label: breadcrumb\n      };\n    }\n    return breadcrumb;\n  }\n}\n","import { Component, ContentChild, Input, OnInit, TemplateRef, ViewEncapsulation, OnDestroy, Output } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { Breadcrumb } from './breadcrumb';\n\n@Component({\n  selector: 'xng-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  breadcrumbs: Breadcrumb[];\n  breadcrumbs$: Observable<Breadcrumb[]>;\n  separatorTemplate: TemplateRef<void>;\n  private _separator = '/';\n\n  /**\n   * Breadcrumb item can be customized with this template\n   * Template context is provided label, additional info, first and last indexes\n   * Use cases:\n   * 1) Add an icon along with label\n   * 2) i18n. {{breadcrumb | translate}} or {{breadcrumb | transloco}}\n   * 3) Change text case {{breadcrumb | titlecase}}\n   */\n  @ContentChild(BreadcrumbItemDirective, { static: false, read: TemplateRef }) itemTemplate;\n\n  /**\n   * If true, breadcrumb is auto generated even without any mapping label\n   * Default label is same as route segment\n   */\n  @Input() autoGenerate = true;\n\n  /**\n   * By default query params will be preserved with breadcrumbs\n   */\n  @Input() preserveQueryParams = true;\n\n  /**\n   * custom class provided by consumer to increase specificity\n   * This will benefit to override styles that are conflicting\n   */\n  @Input() class = '';\n\n  /**\n   * separator between breadcrumbs, defaults to '/'.\n   * User can customize separator either by passing a String or Template\n   *\n   * String --> Ex: <xng-breadcrumb separator=\"-\"> </xng-breadcrumb>\n   *\n   * Template --> Ex: <xng-breadcrumb [separator]=\"separatorTemplate\"> </xng-breadcrumb>\n   * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>\n   */\n  @Input('separator')\n  set separator(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.separatorTemplate = value;\n      this._separator = undefined;\n    } else {\n      this.separatorTemplate = undefined;\n      this._separator = value || '/';\n    }\n  }\n  get separator() {\n    return this._separator;\n  }\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  ngOnInit() {\n    this.subscription = this.breadcrumbService.breadcrumbs$.subscribe(breadcrumbs => {\n      this.breadcrumbs = breadcrumbs\n        .map(breadcrumb => {\n          if (!this.preserveQueryParams) {\n            breadcrumb.routeLink = breadcrumb.routeLink.split('?')[0];\n          }\n          return breadcrumb;\n        })\n        .filter(breadcrumb => {\n          // Usually, breadcrumb list can contain a combination of auto generated and user specified labels\n          // this filters autogenerated labels in case of \"[autoGenerate]: false\"\n          if (this.autoGenerate) {\n            return true;\n          }\n          return !breadcrumb.isAutoGeneratedLabel;\n        });\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  declarations: [BreadcrumbComponent, BreadcrumbItemDirective],\n  imports: [CommonModule, RouterModule],\n  exports: [BreadcrumbComponent, BreadcrumbItemDirective]\n})\nexport class BreadcrumbModule {}\n"]}