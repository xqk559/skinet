import { __decorate, __metadata } from "tslib";
import { Component, ContentChild, Input, TemplateRef, ViewEncapsulation } from '@angular/core';
import { BreadcrumbItemDirective } from './breadcrumb-item.directive';
import { BreadcrumbService } from './breadcrumb.service';
var BreadcrumbComponent = /** @class */ (function () {
    function BreadcrumbComponent(breadcrumbService) {
        this.breadcrumbService = breadcrumbService;
        this._separator = '/';
        /**
         * If true, breadcrumb is auto generated even without any mapping label
         * Default label is same as route segment
         */
        this.autoGenerate = true;
        /**
         * By default query params will be preserved with breadcrumbs
         */
        this.preserveQueryParams = true;
        /**
         * custom class provided by consumer to increase specificity
         * This will benefit to override styles that are conflicting
         */
        this.class = '';
    }
    Object.defineProperty(BreadcrumbComponent.prototype, "separator", {
        get: function () {
            return this._separator;
        },
        /**
         * separator between breadcrumbs, defaults to '/'.
         * User can customize separator either by passing a String or Template
         *
         * String --> Ex: <xng-breadcrumb separator="-"> </xng-breadcrumb>
         *
         * Template --> Ex: <xng-breadcrumb [separator]="separatorTemplate"> </xng-breadcrumb>
         * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>
         */
        set: function (value) {
            if (value instanceof TemplateRef) {
                this.separatorTemplate = value;
                this._separator = undefined;
            }
            else {
                this.separatorTemplate = undefined;
                this._separator = value || '/';
            }
        },
        enumerable: true,
        configurable: true
    });
    BreadcrumbComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.breadcrumbService.breadcrumbs$.subscribe(function (breadcrumbs) {
            _this.breadcrumbs = breadcrumbs
                .map(function (breadcrumb) {
                if (!_this.preserveQueryParams) {
                    breadcrumb.routeLink = breadcrumb.routeLink.split('?')[0];
                }
                return breadcrumb;
            })
                .filter(function (breadcrumb) {
                // Usually, breadcrumb list can contain a combination of auto generated and user specified labels
                // this filters autogenerated labels in case of "[autoGenerate]: false"
                if (_this.autoGenerate) {
                    return true;
                }
                return !breadcrumb.isAutoGeneratedLabel;
            });
        });
    };
    BreadcrumbComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    BreadcrumbComponent.ctorParameters = function () { return [
        { type: BreadcrumbService }
    ]; };
    __decorate([
        ContentChild(BreadcrumbItemDirective, { static: false, read: TemplateRef }),
        __metadata("design:type", Object)
    ], BreadcrumbComponent.prototype, "itemTemplate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BreadcrumbComponent.prototype, "autoGenerate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BreadcrumbComponent.prototype, "preserveQueryParams", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BreadcrumbComponent.prototype, "class", void 0);
    __decorate([
        Input('separator'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], BreadcrumbComponent.prototype, "separator", null);
    BreadcrumbComponent = __decorate([
        Component({
            selector: 'xng-breadcrumb',
            template: "<nav aria-label=\"breadcrumb\" class=\"xng-breadcrumb-root\" [ngClass]=\"class\">\n  <ol class=\"xng-breadcrumb-list\">\n    <ng-container *ngFor=\"let breadcrumb of breadcrumbs; last as isLast; first as isFirst\">\n      <li class=\"xng-breadcrumb-item\">\n        <a\n          *ngIf=\"!isLast\"\n          [routerLink]=\"[breadcrumb.routeLink]\"\n          class=\"xng-breadcrumb-link\"\n          [ngClass]=\"{ 'xng-breadcrumb-link-disabled': breadcrumb.disable }\"\n          [attr.aria-disabled]=\"breadcrumb.disable\"\n          [queryParams]=\"breadcrumb.queryParams\"\n          [fragment]=\"breadcrumb.fragment\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: breadcrumb.label, info: breadcrumb.info, last: isLast, first: isFirst }\"\n          ></ng-container>\n          <ng-container *ngIf=\"!itemTemplate\">{{ breadcrumb.label }}</ng-container>\n        </a>\n\n        <label *ngIf=\"isLast\" class=\"xng-breadcrumb-trail\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: breadcrumb.label, info: breadcrumb.info, last: isLast, first: isFirst }\"\n          ></ng-container>\n          <ng-container *ngIf=\"!itemTemplate\">{{ breadcrumb.label }}</ng-container>\n        </label>\n      </li>\n\n      <li *ngIf=\"!isLast\" class=\"xng-breadcrumb-separator\" aria-hidden=\"true\" role=\"separator\">\n        <ng-container *ngTemplateOutlet=\"separatorTemplate\"></ng-container>\n        <ng-container *ngIf=\"!separatorTemplate\">{{ separator }}</ng-container>\n      </li>\n    </ng-container>\n  </ol>\n</nav>\n",
            encapsulation: ViewEncapsulation.None,
            styles: [".xng-breadcrumb-root{margin:0;color:rgba(0,0,0,.6)}.xng-breadcrumb-list{display:flex;align-items:center;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{display:flex;align-items:center;color:rgba(0,0,0,.9)}.xng-breadcrumb-link{display:flex;align-items:center;white-space:nowrap;color:inherit;text-decoration:none;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{pointer-events:none;cursor:disabled}.xng-breadcrumb-separator{display:flex;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-left:8px;margin-right:8px}"]
        }),
        __metadata("design:paramtypes", [BreadcrumbService])
    ], BreadcrumbComponent);
    return BreadcrumbComponent;
}());
export { BreadcrumbComponent };
//# sourceMappingURL=breadcrumb.component.js.map